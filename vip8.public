WRSK = 1




bit = 31
if bit == 31 then
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("h7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 03 00 28 00 01 00 00 00 00 00 00 00 34 00 00 00 b0 e1 39 02 00 02 00 05", gg.TYPE_BYTE)
gg.refineNumber("h7f", gg.TYPE_BYTE)
if gg.getResultsCount() == 1 then
bit = 32
s = gg.getResultCount()
l32 = gg.getResults(s)
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("h7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 03 00 28 00 01 00 00 00 00 00 00 00 34 00 00 00 00 6c c8 00 00 02 00 05", gg.TYPE_BYTE)
gg.refineNumber("h7f", gg.TYPE_BYTE)
g = gg.getResultCount()
unity32 = gg.getResults(g)
gg.clearResults()
gg.alert("👹 Oyununuz 32 Bit Olarak Tespit Edildi 👹","🇴 🇰")
end
if bit == 31 then
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("h7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 03 00 b7 00 01 00 00 00 f0 0e 71 00 00 00 00 00 40 00 00 00 00 00 00 00", gg.TYPE_BYTE)
gg.refineNumber("h7f", gg.TYPE_BYTE)
if gg.getResultsCount() == 1 then
bit = 64
n = gg.getResultCount()
l64 = gg.getResults(n)
gg.clearResults()
gg.setRanges(gg.REGION_CODE_APP)
gg.searchNumber("h7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 03 00 b7 00 01 00 00 00 70 9c 0a 00 00 00 00 00 40 00 00 00 00 00 00 00", gg.TYPE_BYTE)
gg.refineNumber("h7f", gg.TYPE_BYTE)
k = gg.getResultCount()
unity = gg.getResults(k)
gg.clearResults()
gg.alert("👹 Oyununuz 64 Bit Olarak Tespit Edildi 👹","🇴 🇰")
else
gg.alert("⚠️ libil2cpp.so Dosyası Bulunamadı ⚠️\n⚠️ Scripti Tekrar Açınız ⚠️")
os["exit"]()
end
end
end
if bit == 32 then
bypass1 = baseoffset + 0x8AAEB8
bypass2 = baseoffset + 0x565998
bypass3 = baseoffset + 0x8999A8
bypass4 = baseoffset + 0xAF30C0
bypass5 = baseoffset + 0xAF316C
bypass6 = baseoffset + 0x532E14
bypass7 = baseoffset + 0x532CB4
bypass8 = baseoffset + 0x7F6858
end
